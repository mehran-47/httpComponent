#!/usr/bin/env python3
import os, psutil, shelve as sh, sys, time, random
from subprocess import call
if __name__ == '__main__':
    if sys.argv[1:]:
        if os.path.exists('/opt/SA_stats/'+sys.argv[-1]):
            procname_to_terminate = sys.argv[-1].strip()
            os.remove('/opt/SA_stats/'+procname_to_terminate)
    #terminating appropriate http component server processes
    terminationFailedFor = ''
    for p in psutil.process_iter():
        try:
            if p.name()==procname_to_terminate:
                p.terminate()
        except:
            print('component-process not found')
            terminationFailedFor = p.name().rsplit('-')[0]
    #Killing everything else in case termination fails
    if terminationFailedFor[0:]: call(['pkill','-f',terminationFailedFor])

    '''
    try:
        db = sh.open('/opt/SA_stats/compDB.db', writeback=True)
        killList = db['PIDs']
    except FileNotFoundError:
        print('"compDB.db" not found')
        sys.exit()        
    for component in db['components']: 
        print(db['components'][component]['PID'])
        call('amfpm --stop -p'.split(' ')+ [str(db['components'][component]['PID']), component])
        try:
        	psutil.Process(db['components'][component]['PID']).terminate()            
        except psutil.NoSuchProcess:
            print('component-process not found')
        call(['/opt/httpComponent/send_trace.o', str(db['components'][component]['PID']), '0'])
    db['components'] = {}
    db['PIDs'] = []
    db.close()
    '''
    #os.remove('/opt/SA_stats/compDB.db')